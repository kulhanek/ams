#!/bin/bash
# ------------------------------------------------------------------------------
# Advanced Module System - personal site management utility
# (c) 2024 Petr Kulhanek
# (c) 2017 Petr Kulhanek
# ------------------------------------------------------------------------------

function print_header()
{
    echo "#-------------------------------------------------------------------------------"
    echo "#                             *** Removing builds ***                         "
    echo "#-------------------------------------------------------------------------------"
}

# ------------------------------------------------

function show_log_error()
{
    echo "" 1>&2
    echo ">>> ERROR: Log file: $LOG_FILE" 1>&2
    echo "    Last 10 lines ..." 1>&2
    tail -10 "$LOG_FILE" | awk '{ printf("    %s\n",$0); }' 1>&2
    echo "" 1>&2
}

# --------------------------------------

function get_origins() {
    echo "" | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "# 1) Getting module local origins ..." | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "" | tee -a $LOG_FILE

    rm -rf "$MODULE_ORIGINS"

    for MODULE in "$@"; do
        echo ">> $MODULE" | tee -a $LOG_FILE
        amsmodule allorigins "$MODULE" 2>&1 | tee -a "$MODULE_ORIGINS" | tee -a $LOG_FILE
    done
}

# --------------------------------------

function remove_origins() {

    echo "" | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "# 2) Removing module local origins ..." | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "" | tee -a $LOG_FILE
    echo "# Number of files : `cat $MODULE_ORIGINS | wc -l`" | tee -a $LOG_FILE
    echo ""

    while read FILE; do
        echo "> Removing: $FILE"
        rm -f "$FILE"
    done < <( cat "$MODULE_ORIGINS" )

    cd $SOFTREPO
    ams-bundle rebuild
}

# ------------------------------------------------

function remmove_packages()
{
    echo "" | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "# X) Removing orphaned build directories ..." | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "" | tee -a $LOG_FILE

    echo "# The following directories will be removed ..." | tee -a $LOG_FILE
    cd $SOFTREPO
    ams-bundle --personal dirlist orphans |tee -a $LOG_FILE

    echo ""
    echo -n "Do you want to continue (YES/NO)? "
    read ANSW
    if [ "$ANSW" != "YES" ]; then
        echo ""
        echo ">>> No build directories were removed from the disk."
        echo "    They can be removed later ..."
        echo ""
        exit 1
    fi

    echo ""

    # remove directories
    for DIR in `ams-bundle --personal dirlist orphans`; do
        printf ">>> %-80s " "$DIR" | tee -a $LOG_FILE
        rm -rf "$DIR/" >> $LOG_FILE
        if [ $? -eq 0 ]; then
            echo "    [REMOVED]"
        else
            echo " [FAILED]"
        fi
    done
}

# --------------------------------------

function print_bottom()
{
    echo ""
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "#                           *** End of build removal ***                        " | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
}

# ------------------------------------------------------------------------------

print_header

if [ "`id -u -n`" != "infinity" ]; then
    echo "" 2>&1
    echo ">>> ERROR: This script must be run by the infinity user!"  2>&1
    echo "" 2>&1
    exit 1
fi

# check if $AMS_ROOT_V9 is set -----------------------

if [ -z "$AMS_ROOT_V9" ]; then
    echo "" 1>&2
    echo ">>> ERROR: AMS_ROOT_V9 variable is not set!" 1>&2
    echo "" 1>&2
    exit 1
fi

if [ -z "$SOFTREPO" ]; then
    echo "" 1>&2
    echo ">>> ERROR: SOFTREPO variable is not set!" 1>&2
    echo "" 1>&2
    exit 1
fi

# ------------------------------------------------

umask 027
mkdir -p "$AMS_ROOT_V9/var/personal/logs"
if [ $? -ne 0 ]; then
    echo "" 1>&2
    echo ">>> ERROR: Unable to create $AMS_ROOT_V9/var/personal/logs directory!" 1>&2
    echo "" 1>&2
    exit 1
fi

# log file
LOG_FILE="$AMS_ROOT_V9/var/personal/logs/`date +%Y-%m-%d#%H:%M:%S`.log"

echo ">>> Log file: $LOG_FILE"

MODULE_ORIGINS="$AMS_ROOT_V9/var/personal/module.origins"

# remove origins
get_origins "$@"
remove_origins

# update
LIST="`amsmodule allbuilds 2>&1`"
$AMS_ROOT_V9/share/personal/ams-personal-install $LIST || exit 1

# clean orphaned directories
remmove_packages

rm -f "$MODULE_ORIGINS"

print_bottom

echo ""
echo "END: Log file is in: $LOG_FILE"
echo ""



