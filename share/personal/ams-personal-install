#!/bin/bash
# ------------------------------------------------------------------------------
# Advanced Module System synchronization utility for personal site
# ------------------------------------------------------------------------------

umask 022

AMS_SRC_HOST=personal@softrepo.ncbr.muni.cz

# ------------------------------------------------

function print_header()
{
    echo
    echo "#-------------------------------------------------------------------------------"
    echo "#                         *** Installing modules/builds ***                     "
    echo "#-------------------------------------------------------------------------------"
}

# ------------------------------------------------

function show_log_error()
{
    echo "" 1>&2
    echo ">>> ERROR: Log file: $LOG_FILE" 1>&2
    echo "    Last 10 lines ..." 1>&2
    tail -10 "$LOG_FILE" | awk '{ printf("    %s\n",$0); }' 1>&2
    echo "" 1>&2
}

# ------------------------------------------------

function print_usage()
{
    echo ""
    echo "    Usage: ams-personal install <modfilter1> [...]"
    echo ""
}

# --------------------------------------

function get_origins() {
    echo "" | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "# 1) Getting module origins ..." | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "" | tee -a $LOG_FILE

    rm -rf "$MODULE_ORIGINS"

    for MODULE in "$@"; do
        echo ">> $MODULE" | tee -a $LOG_FILE
        ssh -x $AMS_SRC_HOST amsmodule allorigins "$MODULE" 2>&1 | tee -a "$MODULE_ORIGINS" | tee -a $LOG_FILE
    done
}

# --------------------------------------

function download_origins() {

    echo "" | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "# 2) Downloading origins ..." | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "" | tee -a $LOG_FILE
    echo "# Number of files : `cat $MODULE_ORIGINS | wc -l`" | tee -a $LOG_FILE
    echo ""

    mkdir -p $SOFTREPO/_ams_bundle/blds
    if [ $? -ne 0 ]; then
        echo "" 1>&2
        echo ">>> ERROR: Unable to create '$SOFTREPO/_ams_bundle/blds'!" 1>&2
        exit 1
    fi

    while read FILE; do
        scp $AMS_SRC_HOST:$FILE "$SOFTREPO/_ams_bundle/blds/"
    done < <( cat "$MODULE_ORIGINS" )
}

# --------------------------------------

function local_index(){

    echo "" | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "# 3) Updating local index ..." | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "" | tee -a $LOG_FILE

    cd $SOFTREPO
    ams-bundle rebuild
    ams-bundle --personal index new
}

# --------------------------------------

function remote_index(){

    echo "" | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "# 4) Getting remote index ..." | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE

    cd $SOFTREPO
    ams-bundle sources - | \
               ssh -x $AMS_SRC_HOST ams-index-create --personal builds - $SOFTREPO - \
                    > $SOFTREPO/_ams_bundle/index.old

    echo "# Changed builds ..." | tee -a $LOG_FILE
    ams-bundle --silent index diff | tee -a $LOG_FILE
    if [ $? -ne 0 ]; then exit 1; fi;

    NCHANGES="`ams-bundle --silent index diff | wc -l`"
    if [ "$NCHANGES" -eq 0 ]; then
        echo "> No changed builds were detected ..."
        rm -f "$NEW_INDEX"
        return
    fi
}

# --------------------------------------

function sync_softrepo(){

    echo "" | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "# 5) Syncing builds ..." | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE



    ams-bundle --silent --skipremoved index diff | while read STATUS SHA1 BUILD AMS_PACKAGE_DIR; do

        if [[ ("$STATUS" != "+") && ("$STATUS" != "M") ]]; then continue; fi
        if [[ -z "$AMS_PACKAGE_DIR" ]]; then contine; fi
        if [[ -z "$BUILD" ]]; then contine; fi

        (
        printf "%-60s " "$BUILD"
        echo "==== $BUILD" >> $LOG_FILE

        # create app root directory
        mkdir -p "$SOFTREPO/$AMS_PACKAGE_DIR/"
        if [ $? -ne 0 ]; then
            echo "             [FAILED]"
            echo "   Unable to create directory: '$SOFTREPO/$AMS_PACKAGE_DIR/'"
            show_log_error
            exit 1
        fi

        # copy data
        rsync -e "ssh -x" -av --delete $AMS_RSYNC_OPTS \
                "$AMS_SRC_HOST:$SOFTREPO/$AMS_PACKAGE_DIR/" "$SOFTREPO/$AMS_PACKAGE_DIR/" >> $LOG_FILE 2>&1
        if [ $? -ne 0 ]; then
            echo "             [FAILED]"
            show_log_error
            exit 1
        else
            echo "             [SYNC]"
        fi
        ) < /dev/null
        if [ $? -ne 0 ]; then exit 1; fi
    done
    if [ $? -ne 0 ]; then exit 1; fi

# commit changes
    ams-bundle index commit >> $LOG_FILE 2>&1
}

# --------------------------------------

function print_bottom()
{
    echo
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
    echo "#                      *** End of modules/builds installation ***               " | tee -a $LOG_FILE
    echo "#-------------------------------------------------------------------------------" | tee -a $LOG_FILE
}

# ------------------------------------------------------------------------------

print_header

if [ "`id -u -n`" != "infinity" ]; then
    echo "" 2>&1
    echo ">>> ERROR: This script must be run by the infinity user!"  2>&1
    print_usage  2>&1
    exit 1
fi

if [ $# -le 0 ]; then
    echo "" 1>&2
    echo ">>> ERROR: Incorrect number of arguments!" 1>&2
    print_usage 2>&1
    exit 1
fi

# check if $AMS_ROOT_V9 is set -----------------------
if [ -z "$AMS_ROOT_V9" ]; then
    echo "" 1>&2
    echo ">>> ERROR: $AMS_ROOT_V9 variable is not set!" 1>&2
    echo "" 1>&2
    exit 1
fi

# ------------------------------------------------

mkdir -p "$AMS_ROOT_V9/var/personal/logs"
if [ $? -ne 0 ]; then
    echo "" 1>&2
    echo ">>> ERROR: Unable to create $AMS_ROOT_V9/var/personal/logs directory!" 1>&2
    echo "" 1>&2
    exit 1
fi

# log file
LOG_FILE="$AMS_ROOT_V9/var/personal/logs/`date +%Y-%m-%d#%H:%M:%S`.log"

echo ">>> Log file: $LOG_FILE"

MODULE_ORIGINS="$AMS_ROOT_V9/var/personal/module_origins.$$"

get_origins "$@"
download_origins
local_index
remote_index
sync_softrepo
print_bottom

echo ""
echo "END: Log file is in: $LOG_FILE"
echo ""

