#!/bin/bash
# ------------------------------------------------------------------------------
# Advanced Module System synchronization utility for personal site
# ------------------------------------------------------------------------------

function print_header()
{
    echo ""
    echo "#-------------------------------------------------------------------------------"
    echo "#                             *** Installing builds ***                         "
    echo "#-------------------------------------------------------------------------------"

    if [ "`id -u -n`" != "infinity" ]; then
        echo "" 2>&1
        echo ">>> ERROR: This script must be run by the infinity user!"  2>&1
        print_usage  2>&1
        exit 1
    fi
}

# ------------------------------------------------

function print_usage()
{
    echo ""
    echo "    Usage: sudo -u infinity -i ams-personal-install [-h | --help] <[prefix/]build1> [[prefix/]build2 [prefix/]build3 ...]"
    echo ""
}

# --------------------------------------

function check_builds(){

    echo ""
    echo "#-------------------------------------------------------------------------------"
    echo "# 2) Checking requested builds and their dependencies ..."
    echo "#-------------------------------------------------------------------------------"
    echo ""
    echo "Number of builds: $#"
    echo ""

    while [ $# -ne 0 ]; do
        BUILD="$1"
        printf "%-40s ... " "$BUILD"
        PREFIX="`dirname $BUILD`"
        BUILD="`basename $BUILD`"
        if [ "$PREFIX" == "." ]; then PREFIX=""; fi
        ams-map-manip --prefix "$PREFIX" isbuild personal "$BUILD" &> /dev/null
        if [ $? -eq 0 ]; then
            printf " [OK]\n"
            for SYNC_BUILD in `ams-map-manip --prefix "$PREFIX" deepsyncdeps personal "$BUILD"`; do
                printf "    |-> %-40s\n" "$SYNC_BUILD"
                if [ -n "$PREFIX" ]; then SYNC_BUILD="$PREFIX/$SYNC_BUILD"; fi
                INSTALL_BUILDS="$INSTALL_BUILDS $SYNC_BUILD"
            done
            if [ -n "$PREFIX" ]; then BUILD="$PREFIX/$BUILD"; fi
            INSTALL_BUILDS="$INSTALL_BUILDS $BUILD"
        else
            printf " [NOT FOUND]\n"
        fi
        shift
    done
    INSTALL_BUILDS="`echo $INSTALL_BUILDS | tr " " "\n" | sort -u`"
}

# --------------------------------------

function add_builds_to_map(){

    echo ""
    echo "#-------------------------------------------------------------------------------"
    echo "# 3) Adding builds to the map ..."
    echo "#-------------------------------------------------------------------------------"
    echo ""
    echo "Number of builds: `echo $INSTALL_BUILDS | wc --words`"
    echo ""

    for BUILD in $INSTALL_BUILDS; do
        echo "Adding $BUILD ..."
        PREFIX="`dirname $BUILD`"
        BUILD="`basename $BUILD`"
        if [ "$PREFIX" == "." ]; then PREFIX=""; fi
        ams-map-manip --prefix "$PREFIX" addbuilds all "$BUILD"
    done
}

# --------------------------------------

function rebuild_map_and_cache(){

    echo "#-------------------------------------------------------------------------------"
    echo "# 4) Rebuilding map and cache ..."
    echo "#-------------------------------------------------------------------------------"

    ams-map-manip distribute
    ams-cache rebuildall
}

# --------------------------------------

function sync_site(){

    echo "#-------------------------------------------------------------------------------"
    echo "# 5) Syncing site ..."
    echo "#-------------------------------------------------------------------------------"

    ams-sync personal softrepo
}

# --------------------------------------

function print_bottom()
{
    echo "#-------------------------------------------------------------------------------"
    echo "#                        *** End of build installation ***                      "
    echo "#-------------------------------------------------------------------------------"
    echo ""
}

# ------------------------------------------------------------------------------

print_header

SHIFT="-"
while [ -n "$SHIFT" ]; do
    SHIFT=""
    case $1 in
        '-h'|'--help')
            print_usage
            exit 0
        ;;
    esac
done

if [ $# -le 0 ]; then
    echo "" 1>&2
    echo ">>> ERROR: Incorrect number of arguments!" 1>&2
    print_usage 2>&1
    exit 1
fi

# determine full path to the script --------------
if [ -z "$AMS_ROOT" ]; then
    echo "" 1>&2
    echo ">>> ERROR: AMS_ROOT variable is not set!" 1>&2
    echo "" 1>&2
    exit 1
fi

# ------------------------------------------------

INSTALL_BUILDS=""
check_builds "$@"
add_builds_to_map
rebuild_map_and_cache
sync_site

print_bottom


